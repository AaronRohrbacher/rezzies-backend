# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: rohrbacher
# "service" is the name of this project. This will also be added to your AWS resource names.
service: rezzies-backend

package:
  excludeDevDependencies: true
  patterns:
    - '!node_modules/aws-sdk/**'
    - '!node_modules/@aws-sdk/**'
    - '!node_modules/java-invoke-local/**'
    - '!__tests__'
    - '!.dynamodb'

plugins:
  - serverless-offline
  - serverless-dynamodb

stages:
  default:
    params:
      tableName: 'reservations-table-${sls:stage}'

custom:
  reservationsTableName: 'reservations-table-${sls:stage}'
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
  serverless-offline:
    reloadHandler: true

provider:
  name: aws
  runtime: nodejs20.x
  region: us-west-2
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ReservationsTable, Arn]
  environment:
    RESERVATIONS_TABLE: ${param:tableName}

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: '*'

resources:
  Resources:
    ReservationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: restaurantId
            AttributeType: S
          - AttributeName: seatingId
            AttributeType: S
          - AttributeName: reservationId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: users
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: restaurantId
            KeySchema:
              - AttributeName: restaurantId
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: seatingId
            KeySchema:
              - AttributeName: seatingId
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: reservationId
            KeySchema:
              - AttributeName: reservationId
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

        ProvisionedThroughput:
          ReadCapacityUnits: 20
          WriteCapacityUnits: 20
        TableName: ${param:tableName}
